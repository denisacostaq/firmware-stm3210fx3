# Makefile.in generated by automake 1.13.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = firmware-stm3210fx3$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = firmware_stm3210fx3-core_cm3.$(OBJEXT) \
	firmware_stm3210fx3-stm32_eval.$(OBJEXT) \
	firmware_stm3210fx3-stm3210c_eval_lcd.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_usart.$(OBJEXT) \
	firmware_stm3210fx3-system_stm32f10x.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_rcc.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_gpio.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_i2c.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_spi.$(OBJEXT) \
	firmware_stm3210fx3-stm32f10x_exti.$(OBJEXT) \
	firmware_stm3210fx3-misc.$(OBJEXT)
am__objects_2 = firmware_stm3210fx3-tasks.$(OBJEXT) \
	firmware_stm3210fx3-list.$(OBJEXT) \
	firmware_stm3210fx3-port.$(OBJEXT) \
	firmware_stm3210fx3-heap_2.$(OBJEXT) \
	firmware_stm3210fx3-stf_syscalls_minimal.$(OBJEXT)
am__objects_3 = firmware_stm3210fx3-main.$(OBJEXT) \
	firmware_stm3210fx3-startup_stm32f10x.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2)
am__objects_4 =
am__objects_5 = $(am__objects_4) $(am__objects_4)
am_firmware_stm3210fx3_OBJECTS = $(am__objects_3) $(am__objects_5)
firmware_stm3210fx3_OBJECTS = $(am_firmware_stm3210fx3_OBJECTS)
firmware_stm3210fx3_LDADD = $(LDADD)
firmware_stm3210fx3_LINK = $(CCLD) $(firmware_stm3210fx3_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(firmware_stm3210fx3_SOURCES)
DIST_SOURCES = $(firmware_stm3210fx3_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
CLEANFILES = \
	~* \
	*.txt \
	$(PACKAGE_NAME).axf \
	$(PACKAGE_NAME).as \
	$(PACKAGE_NAME).hex \
	$(PACKAGE_NAME).map \
	$(PACKAGE_NAME).bin

EXTRA_DIST = \
	./common

LDSCRIPT = ./common/KERNEL/stm32_flash.ld

#Add the directory dir to the list of directories to be searched for header files.
AM_CPPFLAGS = -I $(top_builddir)/src/Source -I \
	$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x \
	-I \
	$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport \
	-I $(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL \
	-I \
	$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc \
	-I \
	$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval \
	-I \
	$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x \
	-I $(top_builddir)/src/common/KERNEL -I \
	$(top_builddir)/src/common/KERNEL/FreeRTOS -I \
	$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/include -I \
	$(top_builddir)/src/common/KERNEL/FreeRTOS/Source -I \
	$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3 \
	-I \
	$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang
ST_LIB_HEADER = \
$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h \
$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.h \
$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.h \
$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h \
$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_rcc.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_i2c.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_spi.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_exti.h \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/inc/misc.h

ST_LIB_SOURCE = \
$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c \
$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c \
$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c \
$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c \
$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c

FREERTOS_SOURCE = \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c  \
$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c

FREERTOS_HEADER = \
$(top_builddir)/src/common/KERNEL/FreeRTOS/FreeRTOSConfig.h \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/include/task.h \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/include/list.h \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/include/semphr.h \
$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h \
$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.h

SOURCE = \
$(top_builddir)/src/Source/main.c \
$(top_builddir)/src/Source/startup_stm32f10x.c \
$(ST_LIB_SOURCE) \
$(FREERTOS_SOURCE)

HEADER = \
$(top_builddir)/src/Source/stm32f10x_conf.h \
$(ST_LIB_HEADER) \
$(FREERTOS_HEADER)

firmware_stm3210fx3_SOURCES = $(SOURCE) $(HEADER)
firmware_stm3210fx3_CFLAGS = $(uC_CFLAGS) $(LINKER_FLAGS) -Wa,-al=$(PACKAGE_NAME).as -Wall

# should use --gc-sections but the debugger does not seem to be able to cope with the option.
LINKER_FLAGS = -nostartfiles -Xlinker -o$(PACKAGE_NAME).axf -Xlinker -M -Xlinker -Map=$(PACKAGE_NAME).map -Xlinker --no-gc-sections
uC_CFLAGS = \
	-g \
	-Os \
	-std=gnu89 \
	-T $(LDSCRIPT) \
	-D STM32F10X_CL \
	-D USE_STM3210C_EVAL \
	-D USE_STDPERIPH_DRIVER \
	-D VECT_TAB_FLASH \
	-D GCC_ARMCM3 \
	-D inline= \
	-D PACK_STRUCT_END=__attribute\(\(packed\)\) \
	-D ALIGN_STRUCT_END=__attribute\(\(aligned\(4\)\)\) \
	-mthumb \
	-mcpu=cortex-m3 \
	-ffunction-sections \
	-fdata-sections

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

firmware-stm3210fx3$(EXEEXT): $(firmware_stm3210fx3_OBJECTS) $(firmware_stm3210fx3_DEPENDENCIES) $(EXTRA_firmware_stm3210fx3_DEPENDENCIES) 
	@rm -f firmware-stm3210fx3$(EXEEXT)
	$(AM_V_CCLD)$(firmware_stm3210fx3_LINK) $(firmware_stm3210fx3_OBJECTS) $(firmware_stm3210fx3_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-core_cm3.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-heap_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-misc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-port.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32_eval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/firmware_stm3210fx3-tasks.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

firmware_stm3210fx3-main.o: $(top_builddir)/src/Source/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-main.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-main.Tpo -c -o firmware_stm3210fx3-main.o `test -f '$(top_builddir)/src/Source/main.c' || echo '$(srcdir)/'`$(top_builddir)/src/Source/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-main.Tpo $(DEPDIR)/firmware_stm3210fx3-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/Source/main.c' object='firmware_stm3210fx3-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-main.o `test -f '$(top_builddir)/src/Source/main.c' || echo '$(srcdir)/'`$(top_builddir)/src/Source/main.c

firmware_stm3210fx3-main.obj: $(top_builddir)/src/Source/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-main.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-main.Tpo -c -o firmware_stm3210fx3-main.obj `if test -f '$(top_builddir)/src/Source/main.c'; then $(CYGPATH_W) '$(top_builddir)/src/Source/main.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/Source/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-main.Tpo $(DEPDIR)/firmware_stm3210fx3-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/Source/main.c' object='firmware_stm3210fx3-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-main.obj `if test -f '$(top_builddir)/src/Source/main.c'; then $(CYGPATH_W) '$(top_builddir)/src/Source/main.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/Source/main.c'; fi`

firmware_stm3210fx3-startup_stm32f10x.o: $(top_builddir)/src/Source/startup_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-startup_stm32f10x.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Tpo -c -o firmware_stm3210fx3-startup_stm32f10x.o `test -f '$(top_builddir)/src/Source/startup_stm32f10x.c' || echo '$(srcdir)/'`$(top_builddir)/src/Source/startup_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Tpo $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/Source/startup_stm32f10x.c' object='firmware_stm3210fx3-startup_stm32f10x.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-startup_stm32f10x.o `test -f '$(top_builddir)/src/Source/startup_stm32f10x.c' || echo '$(srcdir)/'`$(top_builddir)/src/Source/startup_stm32f10x.c

firmware_stm3210fx3-startup_stm32f10x.obj: $(top_builddir)/src/Source/startup_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-startup_stm32f10x.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Tpo -c -o firmware_stm3210fx3-startup_stm32f10x.obj `if test -f '$(top_builddir)/src/Source/startup_stm32f10x.c'; then $(CYGPATH_W) '$(top_builddir)/src/Source/startup_stm32f10x.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/Source/startup_stm32f10x.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Tpo $(DEPDIR)/firmware_stm3210fx3-startup_stm32f10x.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/Source/startup_stm32f10x.c' object='firmware_stm3210fx3-startup_stm32f10x.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-startup_stm32f10x.obj `if test -f '$(top_builddir)/src/Source/startup_stm32f10x.c'; then $(CYGPATH_W) '$(top_builddir)/src/Source/startup_stm32f10x.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/Source/startup_stm32f10x.c'; fi`

firmware_stm3210fx3-core_cm3.o: $(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-core_cm3.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-core_cm3.Tpo -c -o firmware_stm3210fx3-core_cm3.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-core_cm3.Tpo $(DEPDIR)/firmware_stm3210fx3-core_cm3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c' object='firmware_stm3210fx3-core_cm3.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-core_cm3.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c

firmware_stm3210fx3-core_cm3.obj: $(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-core_cm3.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-core_cm3.Tpo -c -o firmware_stm3210fx3-core_cm3.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-core_cm3.Tpo $(DEPDIR)/firmware_stm3210fx3-core_cm3.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c' object='firmware_stm3210fx3-core_cm3.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-core_cm3.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c'; fi`

firmware_stm3210fx3-stm32_eval.o: $(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32_eval.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Tpo -c -o firmware_stm3210fx3-stm32_eval.o `test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c' object='firmware_stm3210fx3-stm32_eval.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32_eval.o `test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c

firmware_stm3210fx3-stm32_eval.obj: $(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32_eval.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Tpo -c -o firmware_stm3210fx3-stm32_eval.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32_eval.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c' object='firmware_stm3210fx3-stm32_eval.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32_eval.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm32_eval.c'; fi`

firmware_stm3210fx3-stm3210c_eval_lcd.o: $(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm3210c_eval_lcd.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Tpo -c -o firmware_stm3210fx3-stm3210c_eval_lcd.o `test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Tpo $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c' object='firmware_stm3210fx3-stm3210c_eval_lcd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm3210c_eval_lcd.o `test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c

firmware_stm3210fx3-stm3210c_eval_lcd.obj: $(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm3210c_eval_lcd.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Tpo -c -o firmware_stm3210fx3-stm3210c_eval_lcd.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Tpo $(DEPDIR)/firmware_stm3210fx3-stm3210c_eval_lcd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c' object='firmware_stm3210fx3-stm3210c_eval_lcd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm3210c_eval_lcd.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Utilities/STM32_EVAL/stm3210c_eval/stm3210c_eval_lcd.c'; fi`

firmware_stm3210fx3-stm32f10x_usart.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_usart.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Tpo -c -o firmware_stm3210fx3-stm32f10x_usart.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c' object='firmware_stm3210fx3-stm32f10x_usart.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_usart.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c

firmware_stm3210fx3-stm32f10x_usart.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_usart.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Tpo -c -o firmware_stm3210fx3-stm32f10x_usart.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_usart.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c' object='firmware_stm3210fx3-stm32f10x_usart.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_usart.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c'; fi`

firmware_stm3210fx3-system_stm32f10x.o: $(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-system_stm32f10x.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Tpo -c -o firmware_stm3210fx3-system_stm32f10x.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Tpo $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c' object='firmware_stm3210fx3-system_stm32f10x.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-system_stm32f10x.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c

firmware_stm3210fx3-system_stm32f10x.obj: $(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-system_stm32f10x.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Tpo -c -o firmware_stm3210fx3-system_stm32f10x.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Tpo $(DEPDIR)/firmware_stm3210fx3-system_stm32f10x.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c' object='firmware_stm3210fx3-system_stm32f10x.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-system_stm32f10x.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c'; fi`

firmware_stm3210fx3-stm32f10x_rcc.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_rcc.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Tpo -c -o firmware_stm3210fx3-stm32f10x_rcc.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c' object='firmware_stm3210fx3-stm32f10x_rcc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_rcc.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c

firmware_stm3210fx3-stm32f10x_rcc.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_rcc.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Tpo -c -o firmware_stm3210fx3-stm32f10x_rcc.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_rcc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c' object='firmware_stm3210fx3-stm32f10x_rcc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_rcc.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c'; fi`

firmware_stm3210fx3-stm32f10x_gpio.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_gpio.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Tpo -c -o firmware_stm3210fx3-stm32f10x_gpio.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c' object='firmware_stm3210fx3-stm32f10x_gpio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_gpio.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c

firmware_stm3210fx3-stm32f10x_gpio.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_gpio.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Tpo -c -o firmware_stm3210fx3-stm32f10x_gpio.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_gpio.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c' object='firmware_stm3210fx3-stm32f10x_gpio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_gpio.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c'; fi`

firmware_stm3210fx3-stm32f10x_i2c.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_i2c.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Tpo -c -o firmware_stm3210fx3-stm32f10x_i2c.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c' object='firmware_stm3210fx3-stm32f10x_i2c.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_i2c.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c

firmware_stm3210fx3-stm32f10x_i2c.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_i2c.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Tpo -c -o firmware_stm3210fx3-stm32f10x_i2c.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_i2c.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c' object='firmware_stm3210fx3-stm32f10x_i2c.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_i2c.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c'; fi`

firmware_stm3210fx3-stm32f10x_spi.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_spi.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Tpo -c -o firmware_stm3210fx3-stm32f10x_spi.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c' object='firmware_stm3210fx3-stm32f10x_spi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_spi.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c

firmware_stm3210fx3-stm32f10x_spi.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_spi.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Tpo -c -o firmware_stm3210fx3-stm32f10x_spi.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_spi.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c' object='firmware_stm3210fx3-stm32f10x_spi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_spi.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_spi.c'; fi`

firmware_stm3210fx3-stm32f10x_exti.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_exti.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Tpo -c -o firmware_stm3210fx3-stm32f10x_exti.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c' object='firmware_stm3210fx3-stm32f10x_exti.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_exti.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c

firmware_stm3210fx3-stm32f10x_exti.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stm32f10x_exti.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Tpo -c -o firmware_stm3210fx3-stm32f10x_exti.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Tpo $(DEPDIR)/firmware_stm3210fx3-stm32f10x_exti.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c' object='firmware_stm3210fx3-stm32f10x_exti.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stm32f10x_exti.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/stm32f10x_exti.c'; fi`

firmware_stm3210fx3-misc.o: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-misc.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-misc.Tpo -c -o firmware_stm3210fx3-misc.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-misc.Tpo $(DEPDIR)/firmware_stm3210fx3-misc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c' object='firmware_stm3210fx3-misc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-misc.o `test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c

firmware_stm3210fx3-misc.obj: $(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-misc.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-misc.Tpo -c -o firmware_stm3210fx3-misc.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-misc.Tpo $(DEPDIR)/firmware_stm3210fx3-misc.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c' object='firmware_stm3210fx3-misc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-misc.obj `if test -f '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/STM32F10x/Libraries/STM32F10x_StdPeriph_Driver/src/misc.c'; fi`

firmware_stm3210fx3-tasks.o: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-tasks.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-tasks.Tpo -c -o firmware_stm3210fx3-tasks.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-tasks.Tpo $(DEPDIR)/firmware_stm3210fx3-tasks.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c' object='firmware_stm3210fx3-tasks.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-tasks.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c

firmware_stm3210fx3-tasks.obj: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-tasks.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-tasks.Tpo -c -o firmware_stm3210fx3-tasks.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-tasks.Tpo $(DEPDIR)/firmware_stm3210fx3-tasks.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c' object='firmware_stm3210fx3-tasks.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-tasks.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/tasks.c'; fi`

firmware_stm3210fx3-list.o: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-list.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-list.Tpo -c -o firmware_stm3210fx3-list.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-list.Tpo $(DEPDIR)/firmware_stm3210fx3-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c' object='firmware_stm3210fx3-list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-list.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c

firmware_stm3210fx3-list.obj: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-list.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-list.Tpo -c -o firmware_stm3210fx3-list.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-list.Tpo $(DEPDIR)/firmware_stm3210fx3-list.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c' object='firmware_stm3210fx3-list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-list.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/list.c'; fi`

firmware_stm3210fx3-port.o: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-port.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-port.Tpo -c -o firmware_stm3210fx3-port.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-port.Tpo $(DEPDIR)/firmware_stm3210fx3-port.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c' object='firmware_stm3210fx3-port.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-port.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c

firmware_stm3210fx3-port.obj: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-port.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-port.Tpo -c -o firmware_stm3210fx3-port.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-port.Tpo $(DEPDIR)/firmware_stm3210fx3-port.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c' object='firmware_stm3210fx3-port.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-port.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/GCC/ARM_CM3/port.c'; fi`

firmware_stm3210fx3-heap_2.o: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-heap_2.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-heap_2.Tpo -c -o firmware_stm3210fx3-heap_2.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-heap_2.Tpo $(DEPDIR)/firmware_stm3210fx3-heap_2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c' object='firmware_stm3210fx3-heap_2.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-heap_2.o `test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c

firmware_stm3210fx3-heap_2.obj: $(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-heap_2.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-heap_2.Tpo -c -o firmware_stm3210fx3-heap_2.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-heap_2.Tpo $(DEPDIR)/firmware_stm3210fx3-heap_2.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c' object='firmware_stm3210fx3-heap_2.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-heap_2.obj `if test -f '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/FreeRTOS/Source/portable/MemMang/heap_2.c'; fi`

firmware_stm3210fx3-stf_syscalls_minimal.o: $(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stf_syscalls_minimal.o -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Tpo -c -o firmware_stm3210fx3-stf_syscalls_minimal.o `test -f '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Tpo $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c' object='firmware_stm3210fx3-stf_syscalls_minimal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stf_syscalls_minimal.o `test -f '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c' || echo '$(srcdir)/'`$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c

firmware_stm3210fx3-stf_syscalls_minimal.obj: $(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -MT firmware_stm3210fx3-stf_syscalls_minimal.obj -MD -MP -MF $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Tpo -c -o firmware_stm3210fx3-stf_syscalls_minimal.obj `if test -f '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Tpo $(DEPDIR)/firmware_stm3210fx3-stf_syscalls_minimal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c' object='firmware_stm3210fx3-stf_syscalls_minimal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(firmware_stm3210fx3_CFLAGS) $(CFLAGS) -c -o firmware_stm3210fx3-stf_syscalls_minimal.obj `if test -f '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; then $(CYGPATH_W) '$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; else $(CYGPATH_W) '$(srcdir)/$(top_builddir)/src/common/KERNEL/stf_syscalls_minimal.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


log: $(PACKAGE_NAME).axf hex
	$(host_alias)-nm -n $(PACKAGE_NAME).axf > $(PACKAGE_NAME)_SymbolTable.txt
	$(host_alias)-size --format=SysV $(PACKAGE_NAME).axf > $(PACKAGE_NAME)_MemoryListingSummary.txt
	$(host_alias)-size $(firmware_stm3210fx3_OBJECTS) > $(PACKAGE_NAME)_MemoryListingDetails.txt

$(PACKAGE_NAME).axf: $(firmware_stm3210fx3_OBJECTS) Makefile
	$(CC) $(uC_CFLAGS) $(firmware_stm3210fx3_OBJECTS) $(LINKER_FLAGS)

hex : $(PACKAGE_NAME).axf
	$(host_alias)-objcopy $(PACKAGE_NAME).axf -O ihex $(PACKAGE_NAME).hex

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
